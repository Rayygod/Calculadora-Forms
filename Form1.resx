<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5SBHDYSqowAAAABJRU5ErkJggg==
</value>
  </data>
</root>